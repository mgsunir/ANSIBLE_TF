---
- name: Primer play
  hosts: vm-azure

  remote_user: ansible
  gather_facts: yes
  vars:
    - container: nginx_test
    - alias_hosts: vm-azure

  vars_files:
    - variables_general.yaml
    - variables_acr.yaml


  tasks:
   - name: Time Zone
     timezone: 
       name: "{{zone}}"
     become: yes


#   - name: try to install Install Galaxy Core  , in re
#    ansible.builtin.apt:
#       name: "ansible-core"
#       state: present
#     become: yes
#     become_user: root

   - name: Removes entry of /etc/host vm-azure
     ansible.builtin.lineinfile:
       path: /etc/hosts
       state: absent
       regexp: '\d+.\d+.\d+.\d+.*vm-azure'
     become: yes
     ignore_errors: True
     # Allow run in localhost inside Task
     run_once: true
     delegate_to: localhost



   - name: Add entry of /etc/host vm-azure
     ansible.builtin.lineinfile:
       path: /etc/hosts
       state: present
       line: "{{vm_ip}} {{alias_hosts}}"
     become: yes
     # Allow run in localhost inside Task
     run_once: true
     delegate_to: localhost




#   - name: Crea directorio .kube en Home
#     file:
#       path: /home/ansible/.kube
#       state: directory 
#       mode: '0777'
#     become: yes

#   - name: Copy Kubeconfig a destino por si acaso se deseara
#     copy:
#      src: "{{path_kube_full}}/config"
#      dest: "{{path_kube_full}}/config"
#      owner: ansible
#     become: yes


# Review why doenst change SUDOERS, i just included in terraform custom data
#   - name: Allow nopasswd suoders
#     community.general.sudoers: 
#       name: custom_rule
#       user: ansible
#       nopassword : true
#       commands : 
#         - NOPASSWD
#     become: yes
#     become_user: root


# Ahora todos a la vez
   - name: DeInstall All
     ansible.builtin.apt:
       name: "{{ item }}"
       state: absent
     become: yes
     become_user: root
     loop: "{{ packages }}"


   - name: Install All
     ansible.builtin.apt: 
       name: "{{ item }}"
       state: present
     become: yes
     become_user: root
     loop: "{{ packages }}"

# Podman da guerra y sodomiza con los uids y gids
#
# loginctl enable-linger ansible
   - name: Login to ACR
     containers.podman.podman_login:
       username: "{{acr_username}}"
       password: "{{acr_password}}"
       registry: "{{acr_login_server}}"

# https://github.com/antoniogrv/ansible-skopeo-collection
   - name: Logado con Skopeo
     local.skopeo.skopeo_login:
       registry: "{{acr_login_server}}"
       username: "{{acr_username}}"
       password: "{{acr_password}}"

   - name: Loop Copy images from docker.io to acr  registry
     local.skopeo.skopeo_copy:
       src_image: "{{item.pathi}}"
       dest_image: "docker://{{acr_login_server}}/{{item.image}}_Z"
       dest_username: "{{acr_username}}" 
       dest_password: "{{acr_password}}"
     become: yes
     loop: "{{apps}}"


       #local.skopeo.skopeo_copy:
       # src_image: "docker://docker.io/redis:alpine3.21"
       #dest_image: "docker://{{acr_login_server}}/redis:alpine3.21"
       #dest_username: "{{acr_username}}" 
       #dest_password: "{{acr_password}}"
       # become: yes


       #PS C:\cursos\MASTER\PRACTICA5\TF> az acr repository list --name terraformacruniracr1
       #[
       #  "manolin/nginx",
       # "manolo/nginx",
       #"nginx"
       #]
       #  podman pull docker://terraformacruniracr1.azurecr.io/manolo/nginx:2.0
       #
       #  ansible@mgs:~$ result="$(az acr repository list -n terraformacr202503 --output tsv)"
       #ansible@mgs:~$ for i in $result; do az acr repository show-tags -n terraformacr202503 --repository $i; done
       #[
       #  "7.7",
       #  "stable-otel_Z"
       #]
       #[
         #"alpine3.21",
         #"alpine3.21_Z"
       #]



# az acr login --name terraformacruniracr1 --expose-token
#
#{
#  "accessToken": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkVZSlg6Wkw3TjpRTEg3OkxMVkg6RFZZRTpFNlpPOlI0Sjc6N1Y2NDpYQUJEOlZWUkg6SVo1TjpZUlA0In0.eyJqdGkiOiI3ZjAyZDljMi1lN2Y5LTQ0NDQtOWZiOC1jMGY2YjJkNzQ2NzUiLCJzdWIiOiJtYW51ZWwuZ3V0aWVycmV6MjE3QGNvbXVuaWRhZHVuaXIubmV0IiwibmJmIjoxNzQwNzkyNjM0LCJleHAiOjE3NDA4MDQzMzQsImlhdCI6MTc0MDc5MjYzNCwiaXNzIjoiQXp1cmUgQ29udGFpbmVyIFJlZ2lzdHJ5IiwiYXVkIjoidGVycmFmb3JtYWNydW5pcmFjcjEuYXp1cmVjci5pbyIsInZlcnNpb24iOiIxLjAiLCJyaWQiOiJmZmZlMDM2ZTUxMDU0OGU1YWVjYTQ4YjhjN2U2Mzc4NiIsImdyYW50X3R5cGUiOiJyZWZyZXNoX3Rva2VuIiwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJ0ZW5hbnQiOiI4OTk3ODlkYy0yMDJmLTQ0YjQtODQ3Mi1hNmQ0MGY5ZWI0NDAiLCJwZXJtaXNzaW9ucyI6eyJhY3Rpb25zIjpbInJlYWQiLCJ3cml0ZSIsImRlbGV0ZSIsIm1ldGFkYXRhL3JlYWQiLCJtZXRhZGF0YS93cml0ZSIsImRlbGV0ZWQvcmVhZCIsImRlbGV0ZWQvcmVzdG9yZS9hY3Rpb24iXX0sInJvbGVzIjpbXX0.Ptu60h3pdef9191WrKcg5mvlFYLIE037bv1hsOwKVQMQ8D7ki-hwADQRmrHl0BkW_aI9VDsJUgnDISNbq_J-UgFOBa6BfySfBVLpM-vHn7TBZS6oKzU3rChWePCPO1u_akp81PFjulaVSxk5PirVAtnawBX63kKtyZZy55OdAROKmdjw5Xp_aHfWhFQbHpYybSxdDJJlkky-z5FrNT33bUtnfS5C-vBj-ilNc2XwuDk5NpwupqlsEz1g7_XJ2lIvWQdZU1Pj2Xk1mZR6mqw86SdagTsNVllasUgVn2ZVOZYmh-2Oewblj_ON70WywMEvoZcJIKGTYGJ0QntBXxMpOQ",
#  "loginServer": "terraformacruniracr1.azurecr.io"
#}
#
#

   - name: Stop the container
     containers.podman.podman_container:
       name: "{{container}}"
       image: "docker://{{acr_login_server}}/{{apps[0].image}}_Z"
       state: stopped
     ignore_errors: yes  
     become: yes

       #   - name: Login to ACR
       #     containers.podman.podman_login:
       #username: "{{acr_username}}"
       #password: "{{acr_password}}"
       #registry: "{{acr_login_server}}"
         #     become: yes


   - name: Pull an image
     containers.podman.podman_image:
       #name: "{{apps[0].pathi}}"
       name: "docker://{{acr_login_server}}/{{apps[0].image}}_Z"
     become: yes


   - name: Restart a container
     containers.podman.podman_container:
       name: "{{container}}"
       #image: "{{apps[0].pathi}}"
       image: "{{acr_login_server}}/{{apps[0].image}}_Z"
       state: started
       ports:
         - "0.0.0.0:80:80"
     become: yes

   - name: Check that you can connect (GET) to a page and it returns a status 200
     ansible.builtin.uri:
       url: "http://{{vm_ip}}"
       return_content: true
       status_code: 200
     register: this
     # Allow run in localhost inside Task
     run_once: true
     delegate_to: localhost

   - name: Visualizar salida CURL
     ansible.builtin.debug:
       msg: "{{this.content}}"

