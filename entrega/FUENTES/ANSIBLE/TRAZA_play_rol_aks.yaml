ansible-playbook [core 2.16.3]
  config file = /home/ansible/ANSIBLE/ansible.cfg
  configured module search path = ['/home/ansible/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/ansible/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.12.3 (main, Feb  4 2025, 14:48:35) [GCC 13.3.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
Using /home/ansible/ANSIBLE/ansible.cfg as config file
Skipping callback 'default', as we already have a stdout callback.
Skipping callback 'minimal', as we already have a stdout callback.
Skipping callback 'oneline', as we already have a stdout callback.

PLAYBOOK: play_rol_aks.yaml ****************************************************
1 plays in play_rol_aks.yaml

PLAY [Primer play] *************************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/ansible/ANSIBLE/play_rol_aks.yaml:15
ok: [vm-azure]

TASK [Tarea Previa] ************************************************************
task path: /home/ansible/ANSIBLE/play_rol_aks.yaml:26
ok: [vm-azure] => {
    "msg": "PRE TASK"
}

TASK [ROLE_AKS : include_vars] *************************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:18
ok: [vm-azure] => {"ansible_facts": {"apps": [{"image": "nginx:stable-otel", "pathi": "docker://docker.io/nginx:stable-otel"}, {"image": "redis:alpine3.21", "pathi": "docker://docker.io/redis:alpine3.21"}, {"image": "azure-vote-front:v2", "pathi": "docker://docker/example-voting-app-vote:latest"}], "namespace": "hiperion", "packages": ["jq", "podman", "skopeo", "tree"], "path_kube": "/home/ansible", "path_kube_full": "/home/ansible/.kube", "vm_ip": "137.117.191.81", "zone": "Europe/Madrid"}, "ansible_included_var_files": ["/home/ansible/ANSIBLE/ROLE_AKS/vars/variables_general_local.yaml"], "changed": false}

TASK [ROLE_AKS : include_vars] *************************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:19
ok: [vm-azure] => {"ansible_facts": {"acr_kogin_server": "XXXXXXXXXXXXX", ":, "XXXXXX"}, "ansible_included_var_files": ["/home/ansible/ANSIBLE/ROLE_AKS/vars/variables_acr.yaml"], "changed": false}

TASK [ROLE_AKS : Return the logged-in user for docker hub registry] ************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:21
ok: [vm-azure] => {"changed": false, "login": {"logged_in": false, "registry": "terraformacr202503.azurecr.io", "me": ""}}

TASK [ROLE_AKS : Visualizar salida podman] *************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:26
ok: [vm-azure] => {
    "msg": " ESTO ES \n {'changed': False, 'lojjj': {'kkkk': 'lllllllllllll', 'username': '', 'logged_in': False}, 'failed': False}"
}

TASK [ROLE_AKS : install pre-requisites] ***************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:33
ok: [vm-azure] => {"changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "openshift", "pyyaml", "kubernetes"], "name": ["openshift", "pyyaml", "kubernetes"], "requirements": null, "state": "present", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Requirement already satisfied: openshift in /usr/local/lib/python3.10/dist-packages (0.13.2)\nRequirement already satisfied: pyyaml in /usr/lib/python3/dist-packages (5.4.1)\nRequirement already satisfied: kubernetes in /usr/local/lib/python3.10/dist-packages (32.0.1)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from openshift) (1.16.0)\nRequirement already satisfied: python-string-utils in /usr/local/lib/python3.10/dist-packages (from openshift) (1.0.0)\nRequirement already satisfied: oauthlib>=3.2.2 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (3.2.2)\nRequirement already satisfied: urllib3>=1.24.2 in /usr/lib/python3/dist-packages (from kubernetes) (1.26.5)\nRequirement already satisfied: google-auth>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.38.0)\nRequirement already satisfied: websocket-client!=0.40.0,!=0.41.*,!=0.42.*,>=0.32.0 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (1.8.0)\nRequirement already satisfied: durationpy>=0.7 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (0.9)\nRequirement already satisfied: requests-oauthlib in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.0.0)\nRequirement already satisfied: python-dateutil>=2.5.3 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.9.0.post0)\nRequirement already satisfied: certifi>=14.05.14 in /usr/lib/python3/dist-packages (from kubernetes) (2020.6.20)\nRequirement already satisfied: requests in /usr/lib/python3/dist-packages (from kubernetes) (2.25.1)\nRequirement already satisfied: pyasn1-modules>=0.2.1 in /usr/lib/python3/dist-packages (from google-auth>=1.0.1->kubernetes) (0.2.1)\nRequirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.0.1->kubernetes) (4.9)\nRequirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.0.1->kubernetes) (5.5.2)\nRequirement already satisfied: pyasn1>=0.1.3 in /usr/lib/python3/dist-packages (from rsa<5,>=3.1.4->google-auth>=1.0.1->kubernetes) (0.4.8)\n", "stdout_lines": ["Requirement already satisfied: openshift in /usr/local/lib/python3.10/dist-packages (0.13.2)", "Requirement already satisfied: pyyaml in /usr/lib/python3/dist-packages (5.4.1)", "Requirement already satisfied: kubernetes in /usr/local/lib/python3.10/dist-packages (32.0.1)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from openshift) (1.16.0)", "Requirement already satisfied: python-string-utils in /usr/local/lib/python3.10/dist-packages (from openshift) (1.0.0)", "Requirement already satisfied: oauthlib>=3.2.2 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (3.2.2)", "Requirement already satisfied: urllib3>=1.24.2 in /usr/lib/python3/dist-packages (from kubernetes) (1.26.5)", "Requirement already satisfied: google-auth>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.38.0)", "Requirement already satisfied: websocket-client!=0.40.0,!=0.41.*,!=0.42.*,>=0.32.0 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (1.8.0)", "Requirement already satisfied: durationpy>=0.7 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (0.9)", "Requirement already satisfied: requests-oauthlib in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.0.0)", "Requirement already satisfied: python-dateutil>=2.5.3 in /usr/local/lib/python3.10/dist-packages (from kubernetes) (2.9.0.post0)", "Requirement already satisfied: certifi>=14.05.14 in /usr/lib/python3/dist-packages (from kubernetes) (2020.6.20)", "Requirement already satisfied: requests in /usr/lib/python3/dist-packages (from kubernetes) (2.25.1)", "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/lib/python3/dist-packages (from google-auth>=1.0.1->kubernetes) (0.2.1)", "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.0.1->kubernetes) (4.9)", "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth>=1.0.1->kubernetes) (5.5.2)", "Requirement already satisfied: pyasn1>=0.1.3 in /usr/lib/python3/dist-packages (from rsa<5,>=3.1.4->google-auth>=1.0.1->kubernetes) (0.4.8)"], "version": null, "virtualenv": null}

TASK [ROLE_AKS : Create a k8s namespace] ***************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:42
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2025-03-08T23:49:29Z", "labels": {"kubernetes.io/metadata.name": "hiperion"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:29Z"}], "name": "hiperion", "resourceVersion": "18087", "uid": "0153b125-7ebe-42fa-a024-39fbf42487f3"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}}

TASK [ROLE_AKS : Login to ACR] *************************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:50
changed: [vm-azure] => {"changed": true, "stderr": "", "stderr_lines": [], "stdout": "Login Succeeded!\n", "stdout_lines": ["Login Succeeded!"]}

TASK [ROLE_AKS : Create a Deployment 4NGINX] ***********************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:59
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1"}, "creationTimestamp": "2025-03-08T23:49:32Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"nginx-aks\"}": {".": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:32Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-12T00:04:18Z"}], "name": "nginx", "namespace": "hiperion", "resourceVersion": "487327", "uid": "164a6626-e723-483b-bf36-763239a7b449"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "app-nginx"}}, "strategy": {"rollingUpdate": {"maxSurge": "25%", "maxUnavailable": "25%"}, "type": "RollingUpdate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "app-nginx"}}, "spec": {"containers": [{"image": "terraformacr202503.azurecr.io/nginx:stable-otel_Z", "imagePullPolicy": "IfNotPresent", "name": "nginx-aks", "ports": [{"containerPort": 80, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}], "dnsPolicy": "ClusterFirst", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30}}}, "status": {"availableReplicas": 1, "conditions": [{"lastTransitionTime": "2025-03-08T23:49:32Z", "lastUpdateTime": "2025-03-08T23:49:37Z", "message": "ReplicaSet \"nginx-c6dcc4f7\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}, {"lastTransitionTime": "2025-03-12T00:04:18Z", "lastUpdateTime": "2025-03-12T00:04:18Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}], "observedGeneration": 1, "readyReplicas": 1, "replicas": 1, "updatedReplicas": 1}}}

TASK [ROLE_AKS : Expose Deployment as a Service 4NGINX] ************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:85
changed: [vm-azure] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "kind": "Service", "metadata": {"creationTimestamp": "2025-03-12T01:05:04Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:allocateLoadBalancerNodePorts": {}, "f:externalTrafficPolicy": {}, "f:internalTrafficPolicy": {}, "f:ports": {".": {}, "k:{\"port\":80,\"protocol\":\"TCP\"}": {".": {}, "f:port": {}, "f:protocol": {}, "f:targetPort": {}}}, "f:selector": {}, "f:sessionAffinity": {}, "f:type": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-12T01:05:04Z"}], "name": "nginx-service", "namespace": "hiperion", "resourceVersion": "501170", "uid": "5975a390-c35b-45c9-bb1f-63ddd8d84983"}, "spec": {"allocateLoadBalancerNodePorts": true, "clusterIP": "10.0.217.99", "clusterIPs": ["10.0.217.99"], "externalTrafficPolicy": "Cluster", "internalTrafficPolicy": "Cluster", "ipFamilies": ["IPv4"], "ipFamilyPolicy": "SingleStack", "ports": [{"nodePort": 32548, "port": 80, "protocol": "TCP", "targetPort": 80}], "selector": {"app": "app-nginx"}, "sessionAffinity": "None", "type": "LoadBalancer"}, "status": {"loadBalancer": {}}}}

TASK [ROLE_AKS : Define PVC 4 REDIS] *******************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:104
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "v1", "kind": "PersistentVolumeClaim", "metadata": {"annotations": {"pv.kubernetes.io/bind-completed": "yes", "pv.kubernetes.io/bound-by-controller": "yes"}, "creationTimestamp": "2025-03-08T23:49:35Z", "finalizers": ["kubernetes.io/pvc-protection"], "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:accessModes": {}, "f:resources": {"f:requests": {".": {}, "f:storage": {}}}, "f:storageClassName": {}, "f:volumeMode": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:35Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:pv.kubernetes.io/bind-completed": {}, "f:pv.kubernetes.io/bound-by-controller": {}}}, "f:spec": {"f:volumeName": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2025-03-08T23:49:44Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:accessModes": {}, "f:capacity": {".": {}, "f:storage": {}}, "f:phase": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-08T23:49:44Z"}], "name": "pvc-redis", "namespace": "hiperion", "resourceVersion": "18221", "uid": "00514bec-a78f-4323-996c-a7df768314da"}, "spec": {"accessModes": ["ReadWriteMany"], "resources": {"requests": {"storage": "1Gi"}}, "storageClassName": "standard", "volumeMode": "Filesystem", "volumeName": "pv-redis"}, "status": {"accessModes": ["ReadWriteMany"], "capacity": {"storage": "1Gi"}, "phase": "Bound"}}}

TASK [ROLE_AKS : Define PV 4 REDIS] ********************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:123
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "v1", "kind": "PersistentVolume", "metadata": {"annotations": {"pv.kubernetes.io/bound-by-controller": "yes"}, "creationTimestamp": "2025-03-08T23:49:37Z", "finalizers": ["kubernetes.io/pv-protection"], "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:accessModes": {}, "f:capacity": {".": {}, "f:storage": {}}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:persistentVolumeReclaimPolicy": {}, "f:storageClassName": {}, "f:volumeMode": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:37Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:pv.kubernetes.io/bound-by-controller": {}}}, "f:spec": {"f:claimRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:resourceVersion": {}, "f:uid": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2025-03-08T23:49:44Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:phase": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-08T23:49:44Z"}], "name": "pv-redis", "resourceVersion": "18218", "uid": "378d7545-c0c0-487f-a917-eb8ad3bf8890"}, "spec": {"accessModes": ["ReadWriteMany"], "capacity": {"storage": "1Gi"}, "claimRef": {"apiVersion": "v1", "kind": "PersistentVolumeClaim", "name": "pvc-redis", "namespace": "hiperion", "resourceVersion": "18137", "uid": "00514bec-a78f-4323-996c-a7df768314da"}, "hostPath": {"path": "/tmp/volume/redix", "type": ""}, "persistentVolumeReclaimPolicy": "Retain", "storageClassName": "standard", "volumeMode": "Filesystem"}, "status": {"lastPhaseTransitionTime": "2025-03-08T23:49:44Z", "phase": "Bound"}}}

TASK [ROLE_AKS : Create a Deployment REDIS] ************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:145
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1"}, "creationTimestamp": "2025-03-08T23:49:38Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"redis-aks\"}": {".": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/data\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"data\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:38Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-12T00:04:26Z"}], "name": "redis", "namespace": "hiperion", "resourceVersion": "487395", "uid": "6272d30d-ddc7-4545-bad1-b9eb12a72009"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "app-redis"}}, "strategy": {"rollingUpdate": {"maxSurge": "25%", "maxUnavailable": "25%"}, "type": "RollingUpdate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "app-redis"}}, "spec": {"containers": [{"image": "terraformacr202503.azurecr.io/redis:alpine3.21_Z", "imagePullPolicy": "IfNotPresent", "name": "redis-aks", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/data", "name": "data"}]}], "dnsPolicy": "ClusterFirst", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30, "volumes": [{"name": "data", "persistentVolumeClaim": {"claimName": "pvc-redis"}}]}}}, "status": {"availableReplicas": 1, "conditions": [{"lastTransitionTime": "2025-03-08T23:49:38Z", "lastUpdateTime": "2025-03-08T23:49:54Z", "message": "ReplicaSet \"redis-7f8575bdc5\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}, {"lastTransitionTime": "2025-03-12T00:04:26Z", "lastUpdateTime": "2025-03-12T00:04:26Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}], "observedGeneration": 1, "readyReplicas": 1, "replicas": 1, "updatedReplicas": 1}}}

TASK [ROLE_AKS : Expose Deployment as a Service REDIS] *************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:189
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "v1", "kind": "Service", "metadata": {"creationTimestamp": "2025-03-08T23:49:40Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:internalTrafficPolicy": {}, "f:ports": {".": {}, "k:{\"port\":6379,\"protocol\":\"TCP\"}": {".": {}, "f:port": {}, "f:protocol": {}, "f:targetPort": {}}}, "f:selector": {}, "f:sessionAffinity": {}, "f:type": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:40Z"}], "name": "redis", "namespace": "hiperion", "resourceVersion": "18178", "uid": "84724dda-6c5a-4538-922c-ee08f3fe6352"}, "spec": {"clusterIP": "10.0.173.31", "clusterIPs": ["10.0.173.31"], "internalTrafficPolicy": "Cluster", "ipFamilies": ["IPv4"], "ipFamilyPolicy": "SingleStack", "ports": [{"port": 6379, "protocol": "TCP", "targetPort": 6379}], "selector": {"app": "app-redis"}, "sessionAffinity": "None", "type": "ClusterIP"}, "status": {"loadBalancer": {}}}}

TASK [ROLE_AKS : Create a Deployment VOTE] *************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:205
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1"}, "creationTimestamp": "2025-03-08T23:49:42Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vote-aks\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"REDIS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-08T23:49:42Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-12T00:04:22Z"}], "name": "vote", "namespace": "hiperion", "resourceVersion": "487356", "uid": "d85f9e8a-3d1b-44c4-adb2-efa1a4425f7e"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "app-vote"}}, "strategy": {"rollingUpdate": {"maxSurge": "25%", "maxUnavailable": "25%"}, "type": "RollingUpdate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "app-vote"}}, "spec": {"containers": [{"env": [{"name": "REDIS", "value": "redis-service"}], "image": "terraformacr202503.azurecr.io/azure-vote-front:v2_Z", "imagePullPolicy": "IfNotPresent", "name": "vote-aks", "ports": [{"containerPort": 80, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}], "dnsPolicy": "ClusterFirst", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30}}}, "status": {"availableReplicas": 1, "conditions": [{"lastTransitionTime": "2025-03-08T23:49:42Z", "lastUpdateTime": "2025-03-08T23:49:45Z", "message": "ReplicaSet \"vote-5fb878d59c\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}, {"lastTransitionTime": "2025-03-12T00:04:22Z", "lastUpdateTime": "2025-03-12T00:04:22Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}], "observedGeneration": 1, "readyReplicas": 1, "replicas": 1, "updatedReplicas": 1}}}

TASK [ROLE_AKS : Expose Deployment as a Service VOTE] **************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:241
ok: [vm-azure] => {"changed": false, "method": "update", "result": {"apiVersion": "v1", "kind": "Service", "metadata": {"creationTimestamp": "2025-03-10T15:41:50Z", "finalizers": ["service.kubernetes.io/load-balancer-cleanup"], "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:allocateLoadBalancerNodePorts": {}, "f:externalTrafficPolicy": {}, "f:internalTrafficPolicy": {}, "f:ports": {".": {}, "k:{\"port\":80,\"protocol\":\"TCP\"}": {".": {}, "f:port": {}, "f:protocol": {}, "f:targetPort": {}}}, "f:selector": {}, "f:sessionAffinity": {}, "f:type": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-10T15:41:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}}}, "f:status": {"f:loadBalancer": {"f:ingress": {}}}}, "manager": "cloud-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-12T00:53:09Z"}], "name": "vote-service", "namespace": "hiperion", "resourceVersion": "498491", "uid": "6163840e-0fe2-43a1-b10a-18d891f36105"}, "spec": {"allocateLoadBalancerNodePorts": true, "clusterIP": "10.0.224.141", "clusterIPs": ["10.0.224.141"], "externalTrafficPolicy": "Cluster", "internalTrafficPolicy": "Cluster", "ipFamilies": ["IPv4"], "ipFamilyPolicy": "SingleStack", "ports": [{"nodePort": 32578, "port": 80, "protocol": "TCP", "targetPort": 80}], "selector": {"app": "app-vote"}, "sessionAffinity": "None", "type": "LoadBalancer"}, "status": {"loadBalancer": {"ingress": [{"ip": "9.163.169.19", "ipMode": "VIP"}]}}}}

TASK [ROLE_AKS : Get an existing Service object vote-service] ******************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:259
ok: [vm-azure] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Service", "metadata": {"creationTimestamp": "2025-03-10T15:41:50Z", "finalizers": ["service.kubernetes.io/load-balancer-cleanup"], "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:allocateLoadBalancerNodePorts": {}, "f:externalTrafficPolicy": {}, "f:internalTrafficPolicy": {}, "f:ports": {".": {}, "k:{\"port\":80,\"protocol\":\"TCP\"}": {".": {}, "f:port": {}, "f:protocol": {}, "f:targetPort": {}}}, "f:selector": {}, "f:sessionAffinity": {}, "f:type": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2025-03-10T15:41:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}}}, "f:status": {"f:loadBalancer": {"f:ingress": {}}}}, "manager": "cloud-controller-manager", "operation": "Update", "subresource": "status", "time": "2025-03-12T00:53:09Z"}], "name": "vote-service", "namespace": "hiperion", "resourceVersion": "498491", "uid": "6163840e-0fe2-43a1-b10a-18d891f36105"}, "spec": {"allocateLoadBalancerNodePorts": true, "clusterIP": "10.0.224.141", "clusterIPs": ["10.0.224.141"], "externalTrafficPolicy": "Cluster", "internalTrafficPolicy": "Cluster", "ipFamilies": ["IPv4"], "ipFamilyPolicy": "SingleStack", "ports": [{"nodePort": 32578, "port": 80, "protocol": "TCP", "targetPort": 80}], "selector": {"app": "app-vote"}, "sessionAffinity": "None", "type": "LoadBalancer"}, "status": {"loadBalancer": {"ingress": [{"ip": "9.163.169.19", "ipMode": "VIP"}]}}}]}

TASK [ROLE_AKS : Pinta variable registrada] ************************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:267
ok: [vm-azure] => {
    "msg": "SALIDA: 9.163.169.19"
}

TASK [ROLE_AKS : Check that you can connect (GET) to a page and it returns a status 200] ***
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:271
ok: [vm-azure -> localhost] => {"changed": false, "connection": "close", "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Cats vs Dogs!</title>\n    <base href=\"/index.html\">\n    <meta name = \"viewport\" content = \"width=device-width, initial-scale = 1.0\">\n    <meta name=\"keywords\" content=\"docker-compose, docker, stack\">\n    <meta name=\"author\" content=\"Tutum dev team\">\n    <link rel='stylesheet' href=\"/static/stylesheets/style.css\" />\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div id=\"content-container\">\n      <div id=\"content-container-center\">\n        <h3>Cats vs Dogs!</h3>\n        <form id=\"choice\" name='form' method=\"POST\" action=\"/\">\n          <button id=\"a\" type=\"submit\" name=\"vote\" class=\"a\" value=\"a\">Cats</button>\n          <button id=\"b\" type=\"submit\" name=\"vote\" class=\"b\" value=\"b\">Dogs</button>\n        </form>\n        <div id=\"tip\">\n          (Tip: you can change your vote)\n        </div>\n        <div id=\"hostname\">\n          Processed by container ID vote-5fb878d59c-5ssm2\n        </div>\n      </div>\n    </div>\n    <script src=\"http://code.jquery.com/jquery-latest.min.js\" type=\"text/javascript\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js\"></script>\n\n    \n  </body>\n</html>", "content_length": "1294", "content_type": "text/html; charset=utf-8", "cookies": {"voter_id": "d478e20fc89d06bb"}, "cookies_string": "voter_id=d478e20fc89d06bb", "date": "Wed, 12 Mar 2025 01:05:16 GMT", "elapsed": 0, "msg": "OK (1294 bytes)", "redirected": false, "server": "gunicorn/19.6.0", "set_cookie": "voter_id=d478e20fc89d06bb; Path=/", "status": 200, "url": "http://9.163.169.19"}

TASK [ROLE_AKS : Visualizar salida CURL para vote] *****************************
task path: /home/ansible/ANSIBLE/ROLE_AKS/tasks/main.yml:281
ok: [vm-azure] => {
    "msg": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Cats vs Dogs!</title>\n    <base href=\"/index.html\">\n    <meta name = \"viewport\" content = \"width=device-width, initial-scale = 1.0\">\n    <meta name=\"keywords\" content=\"docker-compose, docker, stack\">\n    <meta name=\"author\" content=\"Tutum dev team\">\n    <link rel='stylesheet' href=\"/static/stylesheets/style.css\" />\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\">\n  </head>\n  <body>\n    <div id=\"content-container\">\n      <div id=\"content-container-center\">\n        <h3>Cats vs Dogs!</h3>\n        <form id=\"choice\" name='form' method=\"POST\" action=\"/\">\n          <button id=\"a\" type=\"submit\" name=\"vote\" class=\"a\" value=\"a\">Cats</button>\n          <button id=\"b\" type=\"submit\" name=\"vote\" class=\"b\" value=\"b\">Dogs</button>\n        </form>\n        <div id=\"tip\">\n          (Tip: you can change your vote)\n        </div>\n        <div id=\"hostname\">\n          Processed by container ID vote-5fb878d59c-5ssm2\n        </div>\n      </div>\n    </div>\n    <script src=\"http://code.jquery.com/jquery-latest.min.js\" type=\"text/javascript\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js\"></script>\n\n    \n  </body>\n</html>"
}

TASK [Tarea POSTERIOR] *********************************************************
task path: /home/ansible/ANSIBLE/play_rol_aks.yaml:31
ok: [vm-azure] => {
    "msg": "POST TASK"
}

PLAY RECAP *********************************************************************
vm-azure                   : ok=22   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

